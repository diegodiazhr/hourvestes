rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is a teacher
    function isTeacher(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Profesor';
    }

    // Users can read their own profile.
    // A teacher can read the profile of their students.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        request.auth.uid == userId || (
          isTeacher(request.auth.uid) && get(/databases/$(database)/documents/users/$(userId)).data.teacherId == request.auth.uid
        )
      );
    }

    // Projects can be created by any authenticated user.
    // Read/Update/Delete is allowed for the owner.
    // A teacher can read the projects of their own students.
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow get: if request.auth != null && (
        // Allow if user is the owner
        get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid ||
        // Allow if user is the teacher of the project owner
        (isTeacher(request.auth.uid) && get(/databases/$(database)/documents/users/$(get(/databases/$(database)/documents/projects/$(projectId)).data.userId)).data.teacherId == request.auth.uid)
      );
      // Listing projects is only allowed for the user's own projects.
      // Teachers will fetch projects per-student, which is covered by the 'get' rule.
      allow list: if request.auth != null && request.query.where.find(p => p[0] == 'userId' && p[2] == request.auth.uid) != null;
    }
  }
}
