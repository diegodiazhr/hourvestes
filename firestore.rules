rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Projects: Users can only CUD their own projects. Teachers/Admins can read.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }

    // Users: Users can read their own profile. Teachers can read their students. Admins can read all.
    match /users/{userId} {
        allow read: if request.auth != null &&
                        (isOwner(userId) ||
                         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                         (
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Profesor' && resource.data.teacherId == request.auth.uid) ||
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador')
                         )
                        );
        allow create; // Allow signup
        allow update: if isOwner(userId);
    }

    // Classes: Teachers can read their own classes. Admins can read all.
    match /classes/{classId} {
        allow read: if request.auth != null &&
                        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        (
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Profesor' && resource.data.teacherId == request.auth.uid) ||
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador')
                        );
        allow create: if request.auth != null &&
                        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Profesor';
    }

    // Schools: Admins and the school's admin teacher can R/W.
    match /schools/{schoolId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null &&
                        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        (
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador') ||
                            (resource.data.adminTeacherId == request.auth.uid)
                        );
    }
  }
}
